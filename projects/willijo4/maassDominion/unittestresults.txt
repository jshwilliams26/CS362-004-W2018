*** Unit Test 1 Run for getCost ***
Input -1 returns -1: True
Card curse returns 0: True
Card estate returns 2: True
Card duchy returns 5: True
Card province returns 8: True
Card copper returns 0: True
Card silver returns 3: True
Card gold returns 6: True
Card adventurer returns 6: True
Card council_room returns 5: True
Card feast returns 4: True
Card gardens returns 4: True
Card mine returns 5: True
Card remodel returns 4: True
Card smithy returns 4: True
Card village returns 3: True
Card baron returns 4: True
Card great_hall returns 3: True
Card minion returns 5: True
Card steward returns 3: True
Card tribute returns 5: True
Card ambassador returns 3: True
Card cutpurse returns 4: True
Card embargo returns 2: True
Card outpost returns 5: True
Card salvager returns 4: True
Card sea_hag returns 4: True
Card treasure_map returns 4: True
Input 27 returns -1: True
Input 28 returns -1: True
Input 29 returns -1: True

*** Unit Test 1 Coverage ***
Function 'getCost'
Lines executed:100.00% of 30
No branches
No calls


*** Unit Test 2 Run for supplyCount ***

*** Testing supplyCount after initialization with 1 player ***
Supply counts for estate, duchy, province, and curse should be 0
Supply count for estate = 0: True
Supply count for estate = 0: True
Supply count for estate = 0: True
Supply count for curse = 0: True

*** Testing supplyCount after initialization with 2 players ***
Supply counts for estate, duchy, and province should be 8, and curse should be 10
Supply count for estate = 8: True
Supply count for estate = 8: True
Supply count for estate = 8: True
Supply count for curse = 10: True

*** Testing supplyCount after initialization with 3 players ***
Supply counts for estate, duchy, and province should be 12, and curse should be 20
Supply count for estate = 12: True
Supply count for estate = 12: True
Supply count for estate = 12: True
Supply count for curse = 20: True

*** Testing supplyCount after initialization with 4 players ***
Supply counts for estate, duchy, and province should be 12, and curse should be 30
Supply count for estate = 12: True
Supply count for estate = 12: True
Supply count for estate = 12: True
Supply count for curse = 30: True

*** Testing supplyCount after initialization with 5 players ***
Supply counts for estate, duchy, province, and curse should be 0
Supply count for estate = 0: True
Supply count for estate = 0: True
Supply count for estate = 0: True
Supply count for curse = 0: True


*** Unit Test 2 Coverage ***
Function 'supplyCount'
Lines executed:100.00% of 2
No branches
No calls


*** Unit Test 3 Run for isGameOver ***

*** Game initialized with 1 player ***
Game is over: True

*** Game initialized with 2 players ***
Game should not be over after initialization, no supply piles should be at 0
Number of supply piles at 0: 0
Game is over: False
--- Province supply count set to 0 after initialization ---
Number of supply piles at 0: 1
Province supply at 0: True
Game is over: True

*** Game reinitialized, game should not be over ***
Number of supply piles at 0: 0
Province supply at 0: False
Game is over: False
--- Supply count of cutpurse set to 0 ---
Number of supply piles at 0: 1
Province supply at 0: False
Game is over: False
--- Supply count of village set to 0 ---
Number of supply piles at 0: 2
Province supply at 0: False
Game is over: False
--- Supply count of treasure_map set to 0 ---
Number of supply piles at 0: 3
Province supply at 0: False
Game is over: False
--- Supply count of tribute set to 0 ---
Number of supply piles at 0: 4
Province supply at 0: False
Game is over: True


*** Unit Test 3 Coverage ***
Function 'isGameOver'
Lines executed:100.00% of 10
No branches
No calls


*** Unit Test 4 Run for whoseTurn ***

*** Testing whoseTurn 5X with 1 player ***
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True

*** Testing whoseTurn 5X with 2 players ***
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 1: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 1: True
whoseTurn(teststate) == 0: True

*** Testing whoseTurn 5X with 3 players ***
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 1: True
whoseTurn(teststate) == 2: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 1: True

*** Testing whoseTurn 5X with 4 players ***
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 1: True
whoseTurn(teststate) == 2: True
whoseTurn(teststate) == 3: True
whoseTurn(teststate) == 0: True

*** Testing whoseTurn 5X with 5 players ***
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True
whoseTurn(teststate) == 0: True

*** Unit Test 4 Coverage ***
Function 'whoseTurn'
Lines executed:100.00% of 2
No branches
No calls


*** Card Test 1 Run for adventurer_func ***

*** Initializing game with 2 players ***
--- Showing the initial state of each player's hand and deck
Current player: 0
Hand count for player 0: 5
Deck count for player 0: 5
Treasure cards in hand for player 0: 4
Card count for player 0 for copper: 7
Card count for player 0 for silver: 0
Card count for player 0 for gold: 0
Card count for player 0 for estate: 3
Current player: 1
Hand count for player 1: 0
Deck count for player 1: 10
Treasure cards in hand for player 1: 0
Card count for player 1 for copper: 7
Card count for player 1 for silver: 0
Card count for player 1 for gold: 0
Card count for player 1 for estate: 3
--- Setting all cards in each player's hand and deck to estate
--- Results for 0 treasure cards in each player's deck
Current player: 0
Hand count for player 0: -592
Deck count for player 0: 0
Treasure cards in hand for player 0 == 0: True
Card count for player 0 for copper: 0
Card count for player 0 for silver: 0
Card count for player 0 for gold: 0
Card count for player 0 for estate: 9
Current player: 1
Hand count for player 1: 0
Deck count for player 1: 10
Treasure cards in hand for player 1 == 0: True
Card count for player 1 for copper: 0
Card count for player 1 for silver: 0
Card count for player 1 for gold: 0
Card count for player 1 for estate: 10

*** Reinitializing game with 2 players ***
--- Setting all cards in each player's hand and deck to estate and 1 copper card
--- Results for 1 treasure card in each player's deck
Current player: 0
Hand count for player 0: 7
Deck count for player 0: 3
Treasure cards in hand for player 0 == 1: False
Card count for player 0 for copper: 2
Card count for player 0 for silver: 0
Card count for player 0 for gold: 0
Card count for player 0 for estate: 8
Current player: 1
Hand count for player 1: 0
Deck count for player 1: 10
Treasure cards in hand for player 1 == 1: False
Card count for player 1 for copper: 2
Card count for player 1 for silver: 0
Card count for player 1 for gold: 0
Card count for player 1 for estate: 8

*** Reinitializing game with 2 players ***
--- Setting all cards in each player's hand and deck to estate and 2 copper cards
--- Results for 2 treasure cards in each player's deck
Current player: 0
Hand count for player 0: 7
Deck count for player 0: 3
Treasure cards in hand for player 0 == 2: True
Card count for player 0 for copper: 3
Card count for player 0 for silver: 0
Card count for player 0 for gold: 0
Card count for player 0 for estate: 7
Current player: 1
Hand count for player 1: 0
Deck count for player 1: 10
Treasure cards in hand for player 1 == 2: False
Card count for player 1 for copper: 3
Card count for player 1 for silver: 0
Card count for player 1 for gold: 0
Card count for player 1 for estate: 7

*** Card Test 1 Coverage ***
Function 'playAdventurer'
Lines executed:100.00% of 19
No branches
No calls


*** Card Test 2 Run for smithy_func ***

*** Running smithy_func for 1 player ***
Player 0's number of cards in hand == 0 before smithy_func: True
Player 0's number of cards in hand == -1 after smithy_func: True

*** Running smithy_func for 2 players ***
Player 0's number of cards in hand == 5 before smithy_func: True
Player 0's number of cards in hand == 7 after smithy_func: False
Player 1's number of cards in hand == 5 before smithy_func: True
Player 1's number of cards in hand == 7 after smithy_func: False

*** Running smithy_func for 3 players ***
Player 0's number of cards in hand == 5 before smithy_func: True
Player 0's number of cards in hand == 7 after smithy_func: False
Player 1's number of cards in hand == 5 before smithy_func: True
Player 1's number of cards in hand == 7 after smithy_func: False
Player 2's number of cards in hand == 5 before smithy_func: True
Player 2's number of cards in hand == 7 after smithy_func: False

*** Running smithy_func for 4 players ***
Player 0's number of cards in hand == 5 before smithy_func: True
Player 0's number of cards in hand == 7 after smithy_func: False
Player 1's number of cards in hand == 5 before smithy_func: True
Player 1's number of cards in hand == 7 after smithy_func: False
Player 2's number of cards in hand == 5 before smithy_func: True
Player 2's number of cards in hand == 7 after smithy_func: False
Player 3's number of cards in hand == 5 before smithy_func: True
Player 3's number of cards in hand == 7 after smithy_func: False


*** Card Test 2 Coverage ***
Function 'playSmithy'
Lines executed:100.00% of 5
No branches
No calls


*** Card Test 3 Run for sea_hag_func ***

*** Initializing game with 2 players ***
Current player: 0
Hand count for player 0: 5
Deck count for player 0: 5
Card count for player 0 for curse card is greater than 0: False
Card count for player 0 for gold card is greater than 0: False
Current player: 0
Hand count for player 1: 0
Deck count for player 1: 10
Card count for player 1 for curse card is greater than 0: False
Card count for player 1 for gold card is greater than 0: False
Current player: 0
Hand count for player 2: 0
Deck count for player 2: 10
Card count for player 2 for curse card is greater than 0: False
Card count for player 2 for gold card is greater than 0: False
Current player: 0
Hand count for player 3: 0
Deck count for player 3: 10
Card count for player 3 for curse card is greater than 0: False
Card count for player 3 for gold card is greater than 0: False

*** Testing sea_hag_func with 2 players ***
Current player: 0
Hand count for player 0: 5
Deck count for player 0: 5
Card count for player 0 for curse card is greater than 0: False
Card count for player 0 for gold card is greater than 0: False
Current player: 0
Hand count for player 1: 0
Deck count for player 1: 7
Card count for player 1 for curse card is greater than 0: True
Card count for player 1 for gold card is greater than 0: False
Current player: 0
Hand count for player 2: 0
Deck count for player 2: 7
Card count for player 2 for curse card is greater than 0: True
Card count for player 2 for gold card is greater than 0: False
Current player: 0
Hand count for player 3: 0
Deck count for player 3: 7
Card count for player 3 for curse card is greater than 0: True
Card count for player 3 for gold card is greater than 0: False

*** Card Test 3 Coverage ***
