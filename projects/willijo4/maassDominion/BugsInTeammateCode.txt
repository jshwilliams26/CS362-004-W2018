Josh Williams (willijo4) Assignment 5 bug report.

Title: playSmithy Bug Report
Product: dominion.c
Classification: Minor Bug
Platform: Linux
Can it be reproduced? Always
Description:
	I found a bug for the smithy card with my cardtest2 and randomtestcard1 programs.
For the cardtest2 program, it initializes the game with 2, 3, and 4 players, and then
it returns whether the number of cards in each player's hand is 5 before smithy (this 
should be the case after initialization) and 7 after (since smithy draws 3 cards to the 
hand and then discards 1 from the hand).  It returns True each time for 5 cards in the 
hand before playing smithy and False for 7 cards in the hand after playing smithy.  
The randomtestcard1 tests the smithy card by playing the smithy card 100,000 times each 
with a random number of players from 1 to 5.  For a correct number of players 
(2-4 players), the number of cards in hand after playing smithy should be two more than 
before playing smithy.  For every random test with a valid number of players, the number 
of cards in hand changed to an incorrect number every single time after the smithy card 
was played.  If I look at the playSmithy function in the maass dominion.c code, the for 
loop looks like "for (i = 0; i < 4; i++)" (line 1124 in her dominion.c code), so it draws 
a card into the player's hand 4 times instead of 3, which is why the number of cards in 
hand for a player after playing smithy is not correct.  I was able to detect the bug by 
manually inspecting the playSmithy function code, and the bug was pretty obvious.  
Steps to Reproduce: use cardEffect to play the smithy card and get the hand count
for the player using the smithy card before and after smithy to see if the correct
number of cards are drawn
Expected Results: 2 more cards in the player's hand after playing Smithy
Actual Results: 3 more cards in the player's hand after playing Smithy
Workaround: There would be no way to make smithy draw the correct number of
cards without modifying the code itself.
Attachments: cardtest2 output:
*** Running smithy_func for 1 player ***
Player 0's number of cards in hand == 0 before smithy_func: True
Player 0's number of cards in hand == -1 after smithy_func: True

*** Running smithy_func for 2 players ***
Player 0's number of cards in hand == 5 before smithy_func: True
Player 0's number of cards in hand == 7 after smithy_func: False
Player 1's number of cards in hand == 5 before smithy_func: True
Player 1's number of cards in hand == 7 after smithy_func: False

*** Running smithy_func for 3 players ***
Player 0's number of cards in hand == 5 before smithy_func: True
Player 0's number of cards in hand == 7 after smithy_func: False
Player 1's number of cards in hand == 5 before smithy_func: True
Player 1's number of cards in hand == 7 after smithy_func: False
Player 2's number of cards in hand == 5 before smithy_func: True
Player 2's number of cards in hand == 7 after smithy_func: False

*** Running smithy_func for 4 players ***
Player 0's number of cards in hand == 5 before smithy_func: True
Player 0's number of cards in hand == 7 after smithy_func: False
Player 1's number of cards in hand == 5 before smithy_func: True
Player 1's number of cards in hand == 7 after smithy_func: False
Player 2's number of cards in hand == 5 before smithy_func: True
Player 2's number of cards in hand == 7 after smithy_func: False
Player 3's number of cards in hand == 5 before smithy_func: True
Player 3's number of cards in hand == 7 after smithy_func: False
Contact Information: willijo4@oregonstate.edu


Title: playAdventurer Bug Report
Product: dominion.c
Classification: Minor Bug
Platform: Linux
Can it be reproduced? Always
Description:
	For the adventurer card, when I ran cardtest1, it runs adventurer for 2 players 
for when there are 0, 1, and 2 treasure cards in each player's hand.  There is a 
bug that was found - when there are no treasure cards in the players' hands, the 
first player has a negative number of cards in hand (-592) after playing adventurer
(can be seen in attachments).
	This could be because of an error that Sarah Maas introduced into the playAdventurer 
function.  The maass adventurer function (playAdventurer), has 2 instances of 
"state->handCount[currentPlayer]--;" (lines 1181 and 1183) in the dominion.c 
code when the original code only has this line once.  This could be why the 
number of cards in the first player's hand after playing the adventurer card 
is less than 0.  I found this bug by manually inspecting the code.
Steps to Reproduce: Initialize a dominion game with 2 players, set all of the
player's cards in hand and deck to non treasure-cards, then have the first player
play the treasure map card and display how many cards are in that player's hand.
Expected Results: 0 cards in player 0's hand
Actual Results: -592 cards in player 0's hand
Workaround: No way to workaround unless the duplicate decrement of the current player's
hand count is removed.
Attachments: cardtest1 output:
*** Card Test 1 Run for playAdventurer ***

*** Initializing game with 2 players ***
--- Showing the initial state of each player's hand and deck
Current player: 0
Hand count for player 0: 5
Deck count for player 0: 5
Treasure cards in hand for player 0: 4
Card count for player 0 for copper: 7
Card count for player 0 for silver: 0
Card count for player 0 for gold: 0
Card count for player 0 for estate: 3
Current player: 1
Hand count for player 1: 0
Deck count for player 1: 10
Treasure cards in hand for player 1: 0
Card count for player 1 for copper: 7
Card count for player 1 for silver: 0
Card count for player 1 for gold: 0
Card count for player 1 for estate: 3
--- Setting all cards in each player's hand and deck to estate
--- Results for 0 treasure cards in each player's deck
Current player: 0
Hand count for player 0: -592
Deck count for player 0: 0
Treasure cards in hand for player 0 == 0: True
Card count for player 0 for copper: 0
Card count for player 0 for silver: 0
Card count for player 0 for gold: 0
Card count for player 0 for estate: 9
Current player: 1
Hand count for player 1: 0
Deck count for player 1: 10
Treasure cards in hand for player 1 == 0: True
Card count for player 1 for copper: 0
Card count for player 1 for silver: 0
Card count for player 1 for gold: 0
Card count for player 1 for estate: 10
Contact Information: willijo4@oregonstate.edu